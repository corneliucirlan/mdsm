{"version":3,"file":"dist/js/mdsm.jquery.min.js","mappings":"CASA,SAAUA,GACT,aAEAA,EAAEC,GAAGC,KAAO,WAGX,IAAMC,EAAgB,UAGhBC,EAAc,cAMhBC,EACK,kBADLA,EAEG,gBAIDC,EAAiB,SAAAC,GACtBP,EAAEO,GAAQC,YAAYJ,GACtBJ,EAAEO,GAAQE,KAAV,WAAmBJ,IAAiBG,YAAYJ,IAsBjD,OAAOM,KAAKC,MAAK,SAACC,EAAOC,GAGxB,IAAIC,EAAUD,EAGbN,EAASP,EAAEc,GAASC,KAAK,eAGzBC,EAAShB,EAAEc,GAASE,OAAO,YAGxB,IAAUhB,EAAEO,GAAQU,SAAS,0BAA2B,IAAUjB,EAAEO,GAAQU,SAAS,0BACxFjB,EAAEO,GAAQW,SAAS,wBAIpB,IAjCIC,EAEeC,EAqCbC,EAAY,WACjBrB,EAAEgB,GAAQM,YAAYlB,GACtBJ,EAAE,IAAD,OAAKK,IAAmBiB,YAAYlB,GACrCJ,EAAE,IAAD,OAAKK,IAAiBiB,YAAYlB,GACnCJ,EAAE,QAAQsB,YAAYnB,IAIvBH,EAhEmB,oCAgEJuB,aAAahB,GAG5BP,EAAEc,GAASU,GAAG,SAjBG,WAChBxB,EAAEgB,GAAQE,SAASd,GACnBJ,EAAE,QAAQkB,SAASf,MAkBpBH,EArEe,iBAqEJwB,GAAG,QAASH,GACvBrB,EAAEyB,UAAUD,GAAG,SAAS,SAAAE,GAGvB,IAAIC,EAAMD,EAAMC,KAAOD,EAAME,QAGjB,WAARD,GAA4B,QAARA,GAAyB,KAARA,GACxCN,OA7DEF,EAAW,4BAA4BU,MAAM,KAM5C,iBAAkBC,QAAWA,OAAOC,eAAiBN,oBAAoBM,gBAJ3DX,EAUP,CAAC,IAAKD,EAASa,KAAK,oBAAqB,SAAU,KAAKA,KAAK,IATjEF,OAAOG,WAAWb,GAAOc,SA+D/BlC,EAAEO,GAAQiB,GAAG,QAAS,KAAK,SAAAE,GAGtB1B,EAAE0B,EAAMnB,QAAQU,SAASZ,KAC5BqB,EAAMS,iBACN7B,EAAeoB,EAAMnB,SAGe,MAAjCP,EAAE0B,EAAMnB,QAAQQ,KAAK,SACxBM,OAMFrB,EAAE,IAAD,OAAKK,IAAmB+B,OAAM,SAAAV,GAG9BpB,EAAeoB,EAAMnB,QAGrBmB,EAAMW,kCApHZ,CAyHGC","sources":["webpack://mdsm/./src/js/mdsm.jquery.js"],"sourcesContent":["/**\n * MDSM\n *\n * jQuery | JavaScript plugin that enables mobile slide navigation for Bootstrap v5 framework\n *\n * @version 2.0.0\n * @author Corneliu Cirlan (www.corneliucirlan.com)\n */\n\n(function($) {\n\t'use strict'\n\n\t$.fn.mdsm = function() {\n\n\t\t// Disable scrolling\n\t\tconst disableScroll = 'mdsm-ds'\n\n\t\t// Active state\n\t\tconst activeState = 'mdsm-active'\n\n\t\t// Active menu overlay\n\t\tconst overlayHTML = '<div class=\"mdsm-overlay\"></div>'\n\t\tconst overlay = '.mdsm-overlay'\n\n\t\tlet dropdown = {\n\t\t\ttoggle: 'dropdown-toggle',\n\t\t\tmenu: 'dropdown-menu'\n\t\t}\n\n\t\t// Toggle dropdown submenu\n\t\tconst toggleDropDown = target => {\n\t\t\t$(target).toggleClass(activeState)\n\t\t\t$(target).next(`.${dropdown.menu}`).toggleClass(activeState)\n\t\t}\n\n\t\t// Check if device is touch enabled\n\t\tconst isTouchEnabled = () => {\n\n\t\t\tlet prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n\n\t\t\tlet mq = function (query) {\n\t\t\t\treturn window.matchMedia(query).matches;\n\t\t\t}\n\n\t\t\tif (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// include the 'heartz' as a way to have a non matching MQ to help terminate the join\n\t\t\t// https://git.io/vznFH\n\t\t\tlet query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n\t\t\treturn mq(query);\n\t\t}\n\n\t\treturn this.each((index, element) => {\n\n\t\t\t// Menu trigger\n\t\t\tlet trigger = element,\n\n\t\t\t\t// Target menu\n\t\t\t\ttarget = $(trigger).attr('data-target'),\n\n\t\t\t\t// Mobile menu parent\n\t\t\t\tparent = $(trigger).parent('.navbar')\n\n\t\t\t// Check if menu has left/right added\n\t\t\tif (false === $(target).hasClass('navbar-collapse-left') && false === $(target).hasClass('navbar-collapse-right')) {\n\t\t\t\t$(target).addClass('navbar-collapse-left')\n\t\t\t}\n\n\t\t\t// Open mobile menu\n\t\t\tconst openMenu = () => {\n\t\t\t\t$(parent).addClass(activeState)\n\t\t\t\t$('body').addClass(disableScroll)\n\t\t\t}\n\n\t\t\t// Close mobile menu\n\t\t\tconst closeMenu = () => {\n\t\t\t\t$(parent).removeClass(activeState)\n\t\t\t\t$(`.${dropdown.toggle}`).removeClass(activeState)\n\t\t\t\t$(`.${dropdown.menu}`).removeClass(activeState)\n\t\t\t\t$('body').removeClass(disableScroll)\n\t\t\t}\n\n\t\t\t// Add overlay to DOM\n\t\t\t$(overlayHTML).insertBefore(target)\n\n\t\t\t// Open menu\n\t\t\t$(trigger).on('click', openMenu)\n\n\t\t\t// Close menu\n\t\t\t$(overlay).on('click', closeMenu)\n\t\t\t$(document).on('keyup', event => {\n\n\t\t\t\t// Get the key\n\t\t\t\tlet key = event.key || event.keyCode\n\n\t\t\t\t// Check if key is ESCAPE\n\t\t\t\tif (key === 'Escape' || key === 'Esc' || key === 27)\n\t\t\t\t\tcloseMenu()\n\t\t\t})\n\n\t\t\t// Clicks if device is touch enabled\n\t\t\tif (isTouchEnabled())\n\t\t\t\t\t$(target).on('click', 'a', event => {\n\n\t\t\t\t\t\t// Dropdown menu toggle\n\t\t\t\t\t\tif ($(event.target).hasClass(dropdown.toggle)) {\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\ttoggleDropDown(event.target)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($(event.target).attr('href') !== '#') {\n\t\t\t\t\t\t\tcloseMenu()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t// If not touch enabled\n\t\t\t\telse\n\t\t\t\t\t$(`.${dropdown.toggle}`).hover(event => {\n\n\t\t\t\t\t\t// Toggle dropdown menu\n\t\t\t\t\t\ttoggleDropDown(event.target)\n\n\t\t\t\t\t\t// Prevent event propagation\n\t\t\t\t\t\tevent.stopImmediatePropagation()\n\t\t\t\t\t})\n\t\t})\n\t}\n\n})(jQuery)\n"],"names":["$","fn","mdsm","disableScroll","activeState","dropdown","toggleDropDown","target","toggleClass","next","this","each","index","element","trigger","attr","parent","hasClass","addClass","prefixes","query","closeMenu","removeClass","insertBefore","on","document","event","key","keyCode","split","window","DocumentTouch","join","matchMedia","matches","preventDefault","hover","stopImmediatePropagation","jQuery"],"sourceRoot":""}