{"version":3,"file":"dist/js/mdsm.vanilla.min.js","mappings":"CASC,WAEAA,KAAKC,KAAO,SAASC,GAGpB,IAAMC,EAAgB,UAGhBC,EAAc,cAGdC,EAAcC,SAASC,cAAc,OAG3CF,EAAYG,UAAUC,IAFN,gBAIhB,IAAIC,EACK,kBADLA,EAEG,gBAkBDC,EAAiB,SAAAC,GACtBA,EAAOJ,UAAUK,OAAOT,GAhBJ,SAACU,EAAMC,GAO3B,IAJA,IAAIC,EAAUF,EAAKG,mBAIZD,GAAS,CACf,GAAIA,EAAQE,QAAQH,GAAW,OAAOC,EACtCA,EAAUA,EAAQC,oBAQnBE,CAAeP,EAAQ,IAAIF,GAAeF,UAAUK,OAAOT,IAuBxDgB,EAAUlB,EAGbU,EAASN,SAASe,cAAcD,EAAQE,aAAa,gBAGrDC,OAASH,EAAQI,QAAQ,YAGtB,IAAUZ,EAAOJ,UAAUiB,SAAS,0BAA2B,IAAUb,EAAOJ,UAAUiB,SAAS,0BACtGb,EAAOJ,UAAUC,IAAI,wBAItB,IA7BoBiB,EAFfC,EAyCCC,EAAY,WACjBL,OAAOf,UAAUqB,OAAOzB,GACxBE,SAASe,cAAc,IAAIX,GAAiBF,UAAUqB,OAAOzB,GAC7DE,SAASe,cAAc,IAAIX,GAAeF,UAAUqB,OAAOzB,GAC3DE,SAASe,cAAc,QAAQb,UAAUqB,OAAO1B,IAIjDiB,EAAQU,iBAAiB,SAlBR,WAGhBP,OAAOQ,aAAa1B,EAAaO,GAEjCW,OAAOf,UAAUC,IAAIL,GACrBE,SAASe,cAAc,QAAQb,UAAUC,IAAIN,MAe9CE,EAAYyB,iBAAiB,QAASF,GACtCtB,SAASwB,iBAAiB,SAAS,SAAAE,GAGlC,IAAIC,EAAMD,EAAMC,KAAOD,EAAME,QAGjB,WAARD,GAA4B,QAARA,GAAyB,KAARA,GACxCL,OA5DGD,EAAW,4BAA4BQ,MAAM,KAM5C,iBAAkBC,QAAWA,OAAOC,eAAiB/B,oBAAoB+B,gBAJ3DX,EAUP,CAAC,IAAKC,EAASW,KAAK,oBAAqB,SAAU,KAAKA,KAAK,IATjEF,OAAOG,WAAWb,GAAOR,SAgEhCZ,SAASkC,iBAAiB,aACxBC,SAAQ,SAAAC,GACRA,EAAKZ,iBAAiB,SAAS,SAAAE,GAG1BU,EAAKlC,UAAUiB,SAASf,KAC3BsB,EAAMW,iBACNhC,EAAeqB,EAAMpB,SAIlB,MAAQ8B,EAAKpB,aAAa,SAC7BM,WAOJtB,SAASkC,iBAAiB,IAAI9B,GAC5B+B,SAAQ,SAAAC,GACRA,EAAKZ,iBAAiB,aAAa,SAAAE,GAGlCrB,EAAeqB,EAAMpB,QAGrBoB,EAAMY,iCAGTtC,SAASkC,iBAAiB,IAAI9B,GAC5B+B,SAAQ,SAAAC,GACRA,EAAKZ,iBAAiB,YAAY,SAAAE,GAGjCrB,EAAeqB,EAAMpB,QAGrBoB,EAAMY,kCAMXtC,SAASkC,iBAAiB,kBACxBC,SAAQ,SAAAC,GACRA,EAAKZ,iBAAiB,SAAS,WAC9BF,WA9JJ","sources":["webpack://mdsm/./src/js/mdsm.vanilla.js"],"sourcesContent":["/**\n * MDSM\n *\n * jQuery | JavaScript plugin that enables mobile slide navigation for Bootstrap v5 framework\n *\n * @version 2.0.0\n * @author Corneliu Cirlan (www.corneliucirlan.com)\n */\n\n(function() {\n\n\tthis.mdsm = function(element) {\n\n\t\t// Disable scrolling\n\t\tconst disableScroll = 'mdsm-ds'\n\n\t\t// Active state\n\t\tconst activeState = 'mdsm-active'\n\n\t\t// Active menu overlay\n\t\tconst overlayHTML = document.createElement('div')\n\t\tconst overlay = 'mdsm-overlay'\n\n\t\toverlayHTML.classList.add(overlay)\n\n\t\tlet dropdown = {\n\t\t\ttoggle: 'dropdown-toggle',\n\t\t\tmenu: 'dropdown-menu'\n\t\t}\n\n\t\tlet getNextSibling = (elem, selector) => {\n\n\t\t\t// Get the next sibling element\n\t\t\tlet sibling = elem.nextElementSibling;\n\n\t\t\t// If the sibling matches our selector, use it\n\t\t\t// If not, jump to the next sibling and continue the loop\n\t\t\twhile (sibling) {\n\t\t\t\tif (sibling.matches(selector)) return sibling;\n\t\t\t\tsibling = sibling.nextElementSibling\n\t\t\t}\n\n\t\t}\n\n\t\t// Toggle dropdown submenu\n\t\tconst toggleDropDown = target => {\n\t\t\ttarget.classList.toggle(activeState)\n\t\t\tgetNextSibling(target, '.'+dropdown.menu).classList.toggle(activeState)\n\t\t}\n\n\t\t// Check if device is touch enabled\n\t\tconst isTouchEnabled = () => {\n\n\t\t\tlet prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n\n\t\t\tlet mq = function (query) {\n\t\t\t\treturn window.matchMedia(query).matches;\n\t\t\t}\n\n\t\t\tif (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// include the 'heartz' as a way to have a non matching MQ to help terminate the join\n\t\t\t// https://git.io/vznFH\n\t\t\tlet query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n\t\t\treturn mq(query);\n\t\t}\n\n\t\t// Menu trigger\n\t\tlet trigger = element,\n\n\t\t\t// Target menu\n\t\t\ttarget = document.querySelector(trigger.getAttribute('data-target'))\n\n\t\t\t// Mobile menu parent\n\t\t\tparent = trigger.closest('.navbar')\n\n\t\t// Check if menu has left/right added\n\t\tif (false === target.classList.contains('navbar-collapse-left') && false === target.classList.contains('navbar-collapse-right')) {\n\t\t\ttarget.classList.add('navbar-collapse-left')\n\t\t}\n\n\t\t// Open mobile menu\n\t\tconst openMenu = () => {\n\n\t\t\t// Add overlay to DOM\n\t\t\tparent.insertBefore(overlayHTML, target)\n\n\t\t\tparent.classList.add(activeState)\n\t\t\tdocument.querySelector('body').classList.add(disableScroll)\n\t\t}\n\n\t\t// Close mobile menu\n\t\tconst closeMenu = () => {\n\t\t\tparent.classList.remove(activeState)\n\t\t\tdocument.querySelector('.'+dropdown.toggle).classList.remove(activeState)\n\t\t\tdocument.querySelector('.'+dropdown.menu).classList.remove(activeState)\n\t\t\tdocument.querySelector('body').classList.remove(disableScroll)\n\t\t}\n\n\t\t// Open menu\n\t\ttrigger.addEventListener('click', openMenu)\n\n\t\t// Close menu\n\t\toverlayHTML.addEventListener('click', closeMenu)\n\t\tdocument.addEventListener('keyup', event => {\n\n\t\t\t// Get the key\n\t\t\tlet key = event.key || event.keyCode\n\n\t\t\t// Check if key is ESCAPE\n\t\t\tif (key === 'Escape' || key === 'Esc' || key === 27)\n\t\t\t\tcloseMenu()\n\t\t})\n\n\t\t// Clicks if device is touch enabled\n\t\tif (isTouchEnabled())\n\n\t\t\t\t// Top level menu item click\n\t\t\t\tdocument.querySelectorAll('.nav-link')\n\t\t\t\t\t.forEach(item => {\n\t\t\t\t\t\titem.addEventListener('click', event => {\n\n\t\t\t\t\t\t\t// Dropdown menu toggle\n\t\t\t\t\t\t\tif (item.classList.contains(dropdown.toggle)) {\n\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\ttoggleDropDown(event.target)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Close menu\n\t\t\t\t\t\t\tif ('#' !== item.getAttribute('href'))\n\t\t\t\t\t\t\t\tcloseMenu()\n\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\n\t\t\t// Device not touch enabled\n\t\t\telse {\n\t\t\t\tdocument.querySelectorAll('.'+dropdown.toggle)\n\t\t\t\t\t.forEach(item => {\n\t\t\t\t\t\titem.addEventListener('mouseover', event => {\n\n\t\t\t\t\t\t\t// Toggle dropdown menu\n\t\t\t\t\t\t\ttoggleDropDown(event.target)\n\n\t\t\t\t\t\t\t// Prevent event propagation\n\t\t\t\t\t\t\tevent.stopImmediatePropagation()\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\tdocument.querySelectorAll('.'+dropdown.toggle)\n\t\t\t\t\t.forEach(item => {\n\t\t\t\t\t\titem.addEventListener('mouseout', event => {\n\n\t\t\t\t\t\t\t// Toggle dropdown menu\n\t\t\t\t\t\t\ttoggleDropDown(event.target)\n\n\t\t\t\t\t\t\t// Prevent event propagation\n\t\t\t\t\t\t\tevent.stopImmediatePropagation()\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t}\n\n\t\t// Dropdown menu item click\n\t\tdocument.querySelectorAll('.dropdown-item')\n\t\t\t.forEach(item => {\n\t\t\t\titem.addEventListener('click', () => {\n\t\t\t\t\tcloseMenu()\n\t\t\t\t})\n\t\t\t})\n\t}\n\n}())\n"],"names":["this","mdsm","element","disableScroll","activeState","overlayHTML","document","createElement","classList","add","dropdown","toggleDropDown","target","toggle","elem","selector","sibling","nextElementSibling","matches","getNextSibling","trigger","querySelector","getAttribute","parent","closest","contains","query","prefixes","closeMenu","remove","addEventListener","insertBefore","event","key","keyCode","split","window","DocumentTouch","join","matchMedia","querySelectorAll","forEach","item","preventDefault","stopImmediatePropagation"],"sourceRoot":""}